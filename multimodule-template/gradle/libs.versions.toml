[versions]
### Project configs ###
group = "kr.simppl"

### Application Version ###
api = "1.0.0"
admin-api = "1.0.0"

### Project Dependency versions ###
kotlin = "1.9.23"
java = "21"

### Plugin depedency versions ###
asciidoctorConvert = "4.0.2"
ktlint = "12.1.0"

### Spring Boot dependency versions ###
springBoot = "3.2.5"
springDependencyManagement = "1.1.4"

### External Library dependency versions ###
jwt = "0.12.5"
swagger = "2.4.0"
logging = "6.0.3"
s3 = "3.1.1"
querydsl = "5.1.0"

[plugins]
### Kotlin Plugins ###
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-plugin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }

### Spring Boot Plugins ###
springboot = { id = "org.springframework.boot", version.ref = "springBoot" }
springboot-denpendency-management = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }

### External Plugins ###
asciidoctor = { id = "org.asciidoctor.jvm.convert", version.ref = "asciidoctorConvert" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }

[libraries]
### Spring Boot Libraries ###
springboot-web = { module = "org.springframework.boot:spring-boot-starter-web" }
springboot-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
springboot-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
springboot-test = { module = "org.springframework.boot:spring-boot-starter-test" }
springboot-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis" }
springboot-security = { module = "org.springframework.boot:spring-boot-starter-security" }
springboot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }

### External Libraries ###
swagger = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "swagger" }
prometheus = { module = "io.micrometer:micrometer-registry-prometheus" }

jwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jwt" }
jwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jwt" }
jwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jwt" }

logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "logging" }

springboot-s3 = { module = "io.awspring.cloud:spring-cloud-aws-starter-s3" }
springboot-s3-sub = { module = "io.awspring.cloud:spring-cloud-aws-dependencies", version.ref = "s3" }

postgresql = { module = "org.postgresql:postgresql" }

### Rest API Docs Libraries ###
servlet-api = { module = "javax.servlet:javax.servlet-api" }
spring-restdocs-mockmvc = { module = "org.springframework.restdocs:spring-restdocs-mockmvc" }
spring-restdocs-restassured = { module = "org.springframework.restdocs:spring-restdocs-restassured" }
rest-assured-spring-mock-mvc = { module = "io.rest-assured:spring-mock-mvc" }


[bundles]
jwt = ["jwt-api", "jwt-impl", "jwt-jackson"]
